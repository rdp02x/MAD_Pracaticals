LAB-25:- Create application which updates data in table student using SQLite database. 


DatabaseHelper.java :

package com.example.welcome; 
import android.content.ContentValues; 
import android.content.Context; 
import android.database.Cursor; 
import android.database.sqlite.SQLiteDatabase; 
import android.database.sqlite.SQLiteOpenHelper; 
import androidx.annotation.Nullable; 
public class DatabaseHelper extends SQLiteOpenHelper { 
String Database_Name="paruldatabase"; 
int Database_version=1; 
//Table and column name 
String Table_name="student"; 
String id="_id"; 
String column_name="name"; 
String column_mark ="mark"; 
public DatabaseHelper(@Nullable Context context, @Nullable String name, @Nullable 
SQLiteDatabase.CursorFactory factory, int version) { 
super(context, name, factory, version); 
} 
@Override 
public void onCreate(SQLiteDatabase db) { 
// Create your table 
String createTableQuery = "CREATE TABLE " + Table_name + "(" + 
id + " INTEGER PRIMARY KEY AUTOINCREMENT, " + column_name + " TEXT, " + column_mark + " 
INTEGER)"; 
db.execSQL(createTableQuery); 
} 
@Override 
public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) { 
//we will write when we require some logic 
    } 
    //create our own method to add the data in to database 
    void addData(String name, int age){ 
      SQLiteDatabase db  =this.getWritableDatabase(); 
        ContentValues values =new ContentValues(); 
        values.put(column_name,name); 
        values.put(column_mark,age); 
 
        //insert the new row 
        db.insert(Table_name,null,values); 
        db.close(); 
    } 
    // Create operation 
    public long insertData(String name, int mark) { 
        SQLiteDatabase db = this.getWritableDatabase(); 
        ContentValues values = new ContentValues(); 
        values.put(column_name, name); 
        values.put(column_mark, mark); 
        long newRowId = db.insert(Table_name, null, values); 
        db.close(); 
        return newRowId; 
    } 
 
    // Read operation 
    public Cursor getAllData() { 
        SQLiteDatabase db = this.getReadableDatabase(); 
        return db.query(Table_name, null, null, null, null, null, null); 
    } 
 
    // Update operation 
    public int updateData(long id, String newName, int newMark) { 
        SQLiteDatabase db = this.getWritableDatabase(); 
        ContentValues values = new ContentValues(); 
        values.put(column_name, newName); 
        values.put(column_mark, newMark); 
        return db.update(Table_name, values, id + "=?", new String[]{String.valueOf(id)}); 
    } 
} 




MainActivity.java :

package com.example.welcome; 
 
import androidx.appcompat.app.AppCompatActivity; 
 
import android.database.Cursor; 
import android.os.Bundle; 
import android.util.Log; 
import android.view.View; 
import android.widget.Button; 
import android.widget.EditText; 
import android.widget.TextView; 
 
public class MainActivity extends AppCompatActivity { 
//    EditText editText; 
 //   Button btn; 
   // TextView title; 
 
    @Override 
    protected void onCreate(Bundle savedInstanceState) { 
        super.onCreate(savedInstanceState); 
        setContentView(R.layout.activity_main); 
        // Create an instance of your DBHelper 
        DatabaseHelper dbhelper = new DatabaseHelper(this, "paruldatabase", null, 1); 
             
        // Add data to the database 
       // dbhelper.addData("sam wibo", 25); 
        //dbhelper.addData("John gibo", 26); 
        Log.d("MainActivity", "Newly inserted ID: "); 
 
        long newId = dbhelper.insertData("Ajay", 25); 
        Log.d("MainActivity", "Newly inserted ID: " + newId); 
 
      /*  // Get all data operation 
        Cursor cursor = dbhelper.getAllData(); 
        if (cursor != null) { 
            while (cursor.moveToNext()) { 
                long id = cursor.getLong(cursor.getColumnIndexOrThrow(dbhelper.id)); 
                String name = cursor.getString(cursor.getColumnIndexOrThrow(dbhelper.column_name)); 
                int age = cursor.getInt(cursor.getColumnIndexOrThrow(dbhelper.column_age)); 
 
                Log.d("MainActivity", "ID: " + id + ", Name: " + name + ", Age: " + age); 
            } 
            cursor.close(); 
        } 
 
        // Update operation 
        int rowsAffected = dbhelper.updateData(newId, "Updated Name", 30); 
        Log.d("MainActivity", "Rows updated: " + rowsAffected); 
 
        // Get all data after update 
        cursor = dbhelper.getAllData(); 
        if (cursor != null) { 
            while (cursor.moveToNext()) { 
                long id = cursor.getLong(cursor.getColumnIndexOrThrow(dbhelper.id)); 
                String name = cursor.getString(cursor.getColumnIndexOrThrow(dbhelper.column_name)); 
                int age = cursor.getInt(cursor.getColumnIndexOrThrow(dbhelper.column_age)); 
 
                Log.d("MainActivity", "ID: " + id + ", Name: " + name + ", Age: " + age); 
            } 
            cursor.close(); 
        } 
 
        // Delete operation 
        int rowsDeleted = dbhelper.deleteData(newId); 
        Log.d("MainActivity", "Rows deleted: " + rowsDeleted); 
 
    
     // Get all data after delete 
        cursor = dbhelper.getAllData(); 
        if (cursor != null) { 
            while (cursor.moveToNext()) { 
                long id = cursor.getLong(cursor.getColumnIndexOrThrow(dbhelper.id)); 
                String name = cursor.getString(cursor.getColumnIndexOrThrow(dbhelper.column_name)); 
                int age = cursor.getInt(cursor.getColumnIndexOrThrow(dbhelper.column_age)); 
 
                Log.d("MainActivity", "ID: " + id + ", Name: " + name + ", Age: " + age); 
            } 
            cursor.close(); 
        } 
        dbhelper.close();*/ 
    } 
    }
